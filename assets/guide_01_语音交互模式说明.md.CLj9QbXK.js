import{_ as s,c as i,o as l,ae as t}from"./chunks/framework.BGWP4WZ_.js";const c=JSON.parse('{"title":"语音交互模式说明","description":"","frontmatter":{},"headers":[],"relativePath":"guide/01_语音交互模式说明.md","filePath":"guide/01_语音交互模式说明.md"}'),n={name:"guide/01_语音交互模式说明.md"};function e(o,a,r,h,p,d){return l(),i("div",null,a[0]||(a[0]=[t(`<h1 id="语音交互模式说明" tabindex="-1">语音交互模式说明 <a class="header-anchor" href="#语音交互模式说明" aria-label="Permalink to &quot;语音交互模式说明&quot;">​</a></h1><p><img src="https://github.com/user-attachments/assets/df8bd5d2-a8e6-4203-8084-46789fc8e9ad" alt="Image"></p><h2 id="项目概述" tabindex="-1">项目概述 <a class="header-anchor" href="#项目概述" aria-label="Permalink to &quot;项目概述&quot;">​</a></h2><p>py-xiaozhi是一个智能语音交互助手，支持多种操作模式和功能，包括语音对话、物联网设备控制、视觉识别等功能。本文档主要介绍语音交互的基本使用方法。</p><h2 id="语音交互模式" tabindex="-1">语音交互模式 <a class="header-anchor" href="#语音交互模式" aria-label="Permalink to &quot;语音交互模式&quot;">​</a></h2><p>语音交互支持两种模式，您可以根据实际需求选择合适的交互方式：</p><h3 id="_1-长按对话模式" tabindex="-1">1. 长按对话模式 <a class="header-anchor" href="#_1-长按对话模式" aria-label="Permalink to &quot;1. 长按对话模式&quot;">​</a></h3><ul><li><strong>操作方法</strong>：按住说话按钮，松手发送</li><li><strong>适用场景</strong>：短句交流，精确控制对话开始和结束时间</li><li><strong>优点</strong>：避免误触发，控制精确</li><li><strong>快捷键</strong>：F2（GUI模式下）</li></ul><h3 id="_2-自动对话模式" tabindex="-1">2. 自动对话模式 <a class="header-anchor" href="#_2-自动对话模式" aria-label="Permalink to &quot;2. 自动对话模式&quot;">​</a></h3><ul><li><strong>操作方法</strong>：点击开始对话，系统自动检测语音并发送</li><li><strong>适用场景</strong>：长句交流，无需手动控制</li><li><strong>优点</strong>：解放双手，自然交流</li><li><strong>界面提示</strong>：显示&quot;聆听中&quot;表示系统正在接收您的语音</li><li><strong>快捷键</strong>：F2（CLI模式下）或界面按钮</li></ul><h3 id="模式切换" tabindex="-1">模式切换 <a class="header-anchor" href="#模式切换" aria-label="Permalink to &quot;模式切换&quot;">​</a></h3><ul><li>在GUI界面右下角显示当前模式</li><li>点击按钮可以切换模式</li><li>可以通过配置文件设置默认模式</li></ul><h2 id="对话控制" tabindex="-1">对话控制 <a class="header-anchor" href="#对话控制" aria-label="Permalink to &quot;对话控制&quot;">​</a></h2><h3 id="打断功能" tabindex="-1">打断功能 <a class="header-anchor" href="#打断功能" aria-label="Permalink to &quot;打断功能&quot;">​</a></h3><p>当系统正在语音回复时，您可以随时打断：</p><ul><li><strong>GUI模式</strong>：使用F3键或界面上的打断按钮</li><li><strong>CLI模式</strong>：使用F3键</li></ul><h3 id="状态流转" tabindex="-1">状态流转 <a class="header-anchor" href="#状态流转" aria-label="Permalink to &quot;状态流转&quot;">​</a></h3><p>语音交互系统有以下几种状态：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>                        +----------------+</span></span>
<span class="line"><span>                        |                |</span></span>
<span class="line"><span>                        v                |</span></span>
<span class="line"><span>+------+  唤醒词/按钮  +------------+   |   +------------+</span></span>
<span class="line"><span>| IDLE | -----------&gt; | CONNECTING | --+-&gt; | LISTENING  |</span></span>
<span class="line"><span>+------+              +------------+       +------------+</span></span>
<span class="line"><span>   ^                                            |</span></span>
<span class="line"><span>   |                                            | 语音识别完成</span></span>
<span class="line"><span>   |          +------------+                    v</span></span>
<span class="line"><span>   +--------- |  SPEAKING  | &lt;-----------------+</span></span>
<span class="line"><span>     完成播放 +------------+</span></span></code></pre></div><ul><li><strong>IDLE</strong>：空闲状态，等待唤醒词或按钮触发</li><li><strong>CONNECTING</strong>：正在连接服务器</li><li><strong>LISTENING</strong>：正在聆听用户语音</li><li><strong>SPEAKING</strong>：系统正在语音回复</li></ul><h2 id="语音命令" tabindex="-1">语音命令 <a class="header-anchor" href="#语音命令" aria-label="Permalink to &quot;语音命令&quot;">​</a></h2><p>系统支持多种语音命令，以下是常用命令示例：</p><h3 id="基础交互" tabindex="-1">基础交互 <a class="header-anchor" href="#基础交互" aria-label="Permalink to &quot;基础交互&quot;">​</a></h3><ul><li>&quot;你好&quot;/&quot;你是谁&quot; - 基础打招呼和身份询问</li><li>&quot;谢谢&quot;/&quot;再见&quot; - 礼貌用语</li></ul><h3 id="物联网控制" tabindex="-1">物联网控制 <a class="header-anchor" href="#物联网控制" aria-label="Permalink to &quot;物联网控制&quot;">​</a></h3><ul><li>&quot;打开/关闭客厅的灯&quot; - 控制灯光</li><li>&quot;播放 菊花台 通过iot音乐播放器播放&quot; - 开始播放音乐</li></ul><h3 id="视觉识别" tabindex="-1">视觉识别 <a class="header-anchor" href="#视觉识别" aria-label="Permalink to &quot;视觉识别&quot;">​</a></h3><ul><li>&quot;打开摄像头&quot; - 开启摄像头</li><li>&quot;识别画面&quot; - 分析当前画面</li><li>&quot;识别到了什么&quot; - ai播放识别的内容</li><li>&quot;关闭摄像头&quot; - 关闭摄像头</li></ul><h2 id="运行模式" tabindex="-1">运行模式 <a class="header-anchor" href="#运行模式" aria-label="Permalink to &quot;运行模式&quot;">​</a></h2><h3 id="gui-模式运行-默认" tabindex="-1">GUI 模式运行（默认） <a class="header-anchor" href="#gui-模式运行-默认" aria-label="Permalink to &quot;GUI 模式运行（默认）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.py</span></span></code></pre></div><h3 id="cli模式运行" tabindex="-1">CLI模式运行 <a class="header-anchor" href="#cli模式运行" aria-label="Permalink to &quot;CLI模式运行&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cli</span></span></code></pre></div><h3 id="构建打包" tabindex="-1">构建打包 <a class="header-anchor" href="#构建打包" aria-label="Permalink to &quot;构建打包&quot;">​</a></h3><p>使用PyInstaller打包为可执行文件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 各平台通用命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scripts/build.py</span></span></code></pre></div><h2 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h2><ol><li><strong>清晰发音</strong>：确保在安静环境中清晰发音</li><li><strong>适当停顿</strong>：句子间适当停顿有助于系统识别</li><li><strong>使用唤醒词</strong>：开启唤醒词功能，可以避免误触发</li><li><strong>查看反馈</strong>：注意界面状态提示，了解系统当前状态</li><li><strong>简洁命令</strong>：使用简洁明了的命令获得更好的识别效果</li></ol><h2 id="获取帮助" tabindex="-1">获取帮助 <a class="header-anchor" href="#获取帮助" aria-label="Permalink to &quot;获取帮助&quot;">​</a></h2><p>如果遇到问题：</p><ol><li>优先查看 docs/异常汇总.md 文档</li><li>通过 GitHub Issues 提交问题</li><li>通过 AI 助手寻求帮助</li><li>联系作者(主页有微信)（请自备 Todesk 链接并说明来意，作者工作日晚上处理）</li></ol>`,41)]))}const g=s(n,[["render",e]]);export{c as __pageData,g as default};
