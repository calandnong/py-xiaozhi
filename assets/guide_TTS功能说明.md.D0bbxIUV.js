import{_ as e,c as i,o as l,ae as t}from"./chunks/framework.BGWP4WZ_.js";const u=JSON.parse('{"title":"小智AI本地TTS功能说明","description":"","frontmatter":{},"headers":[],"relativePath":"guide/TTS功能说明.md","filePath":"guide/TTS功能说明.md"}'),o={name:"guide/TTS功能说明.md"};function s(r,a,n,d,c,h){return l(),i("div",null,a[0]||(a[0]=[t('<h1 id="小智ai本地tts功能说明" tabindex="-1">小智AI本地TTS功能说明 <a class="header-anchor" href="#小智ai本地tts功能说明" aria-label="Permalink to &quot;小智AI本地TTS功能说明&quot;">​</a></h1><h2 id="功能简介" tabindex="-1">功能简介 <a class="header-anchor" href="#功能简介" aria-label="Permalink to &quot;功能简介&quot;">​</a></h2><p>小智AI现已支持本地文字转语音（TTS）功能，允许用户在命令行界面下直接朗读指定文本。该功能基于Microsoft Edge TTS引擎，无需连接小智服务器即可使用，提供高质量的中文语音合成。</p><h2 id="技术实现" tabindex="-1">技术实现 <a class="header-anchor" href="#技术实现" aria-label="Permalink to &quot;技术实现&quot;">​</a></h2><ul><li>使用Edge TTS引擎生成语音</li><li>支持命令行下快速触发</li><li>语音数据会发送到本地音频设备播放</li><li>可实现纯本地的文本朗读功能</li></ul><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h2><h3 id="命令行模式下使用" tabindex="-1">命令行模式下使用 <a class="header-anchor" href="#命令行模式下使用" aria-label="Permalink to &quot;命令行模式下使用&quot;">​</a></h3><p>在命令行模式下，使用以下命令触发TTS功能：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>你想要发送的文本</span></span></code></pre></div><p>例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>你好，小智</span></span></code></pre></div><p>执行后，系统会将输入的文本转换为语音并播放。</p><h3 id="使用技巧" tabindex="-1">使用技巧 <a class="header-anchor" href="#使用技巧" aria-label="Permalink to &quot;使用技巧&quot;">​</a></h3><ol><li><strong>长文本朗读</strong>：支持较长文本的朗读，文本中可以包含标点符号</li><li><strong>音量控制</strong>：可以通过<code>v 数字</code>命令调整音量，例如：<code>v 80</code></li><li><strong>中断朗读</strong>：如需中断当前朗读，可以使用<code>x</code>命令</li><li><strong>并发控制</strong>：当前朗读未完成时，新的TTS请求会自动排队</li></ol><h2 id="依赖说明" tabindex="-1">依赖说明 <a class="header-anchor" href="#依赖说明" aria-label="Permalink to &quot;依赖说明&quot;">​</a></h2><p>本功能依赖以下Python库：</p><ul><li>edge-tts：Microsoft Edge TTS引擎的Python接口</li><li>soundfile：音频文件处理</li><li>pydub：音频转换和处理</li><li>numpy：数据处理</li></ul><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><ol><li><p><strong>无法播放声音</strong>：</p><ul><li>检查系统音频设备是否正常工作</li><li>确保音量设置适当（使用<code>v 80</code>等命令调整）</li><li>验证系统是否已安装必要的音频驱动</li></ul></li><li><p><strong>TTS生成速度慢</strong>：</p><ul><li>首次使用可能需要下载语音模型，会稍慢</li><li>确保网络连接正常（Edge TTS需要网络连接）</li><li>较长文本处理需要更多时间</li></ul></li><li><p><strong>声音质量问题</strong>：</p><ul><li>默认使用Microsoft Edge TTS中的&quot;zh-CN-XiaoxiaoNeural&quot;女声</li><li>如需其他声音，可修改源码中的<code>voice</code>参数</li></ul></li></ol>',19)]))}const T=e(o,[["render",s]]);export{u as __pageData,T as default};
